#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: shift_cap {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;

            label = "shift_cap";
        };

        ta: ta {
            compatible = "zmk,behavior-hold-tap";
            label = "TA";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
        };

        conwin: conwin {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL>, <&kp LEFT_WIN>;

            label = "CONWIN";
        };

        locklayer: locklayer {
            compatible = "zmk,behavior-tap-dance";
            label = "LOCKLAYER";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&to 1>;
        };

        wspacealt: wspacealt {
            compatible = "zmk,behavior-tap-dance";
            label = "WSPACEALT";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&wspaceh LEFT_ALT 0>;
        };

        wspaceh: wspaceh {
            compatible = "zmk,behavior-hold-tap";
            label = "WSPACEH";
            bindings = <&kp>, <&wspace>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos { compatible = "zmk,combos"; };

    macros {
        wspace: wspace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp SPACE>;
            label = "WSPACE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E    &kp R       &kp T                          &kp UP                &kp Y                &kp U  &kp I      &kp O    &kp P     &kp BACKSPACE
&kp TAB     &kp A  &kp S  &kp D    &kp F       &kp G                &kp LEFT  &kp ENTER  &kp RIGHT  &kp H                &kp J  &kp K      &kp L    &kp SEMI  &ta SQT ENTER
&kp LSHIFT  &kp Z  &kp X  &kp C    &kp V       &kp B       &to 4              &kp DOWN              &kp N                &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                          &conwin  &locklayer  &wspacealt                                           &ta RIGHT_ALT SPACE  &mo 1  &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp RIGHT_ARROW LEFT>;
        };

        NUMBER {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4        &kp N5                              &trans          &kp N6  &kp N7  &kp N8  &kp N9  &kp N0   &kp DELETE
&kp CAPS   &trans  &trans  &trans  &trans        &trans                      &trans  &trans  &trans  &trans  &kp N4  &kp N5  &kp N6  &trans   &trans
&trans     &trans  &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_CLR            &trans          &kp N0  &kp N1  &kp N2  &kp N3  &kp DOT  &kp ENTER
                           &to 0   &to 2         &trans                                              &trans  &trans  &trans
            >;

            label = "number";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Symbol {
            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                    &trans          &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&trans     &trans           &trans       &trans    &trans      &trans                 &trans  &trans  &trans  &kp PLUS   &kp MINUS      &kp BSLH      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp UNDERSCORE
&trans     &trans           &trans       &trans    &trans      &trans       &trans            &trans          &kp ASTRK  &kp SLASH      &kp TILDE     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EQUAL
                                         &to 0     &to 3       &trans                                         &trans     &trans         &trans
            >;

            label = "Symbol";
            sensor-bindings = <&scroll_encoder>;
        };

        Fn {
            bindings = <
&kp GRAVE  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                    &trans          &kp F6     &kp F7     &kp F8     &kp F9            &kp F10            &kp F11
&trans     &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &kp PLUS   &kp MINUS  &kp BSLH   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp F12
&trans     &trans  &trans  &trans  &trans  &trans  &trans            &trans          &kp ASTRK  &kp SLASH  &kp TILDE  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp EQUAL
                           &to 0   &to 0   &trans                                    &trans     &trans     &trans
            >;

            label = "Fn";
            sensor-bindings = <&scroll_encoder>;
        };

        Excali {
            bindings = <
&ta TAB C_EJECT  &ta LEFT_BRACKET LEFT_PARENTHESIS  &ta RIGHT_BRACKET RIGHT_PARENTHESIS  &ta LESS_THAN GREATER_THAN  &trans     &kp BACKSPACE                      &kp UP               &kp PLUS   &kp N7    &kp N8     &kp N9  &kp ASTRK  &kp BSPC
&trans           &kp N1                             &kp N2                               &kp N5                      &kp N6     &trans                   &kp LEFT  &kp RET   &kp RIGHT  &kp MINUS  &kp N4    &kp N5     &kp N6  &kp FSLH   &trans
&kp LSHFT        &kp LC(Z)                          &kp LC(X)                            &kp LC(C)                   &kp LC(V)  &kp ENTER      &tog 5              &kp DOWN             &kp N0     &kp N1    &kp N2     &kp N3  &kp DOT    &kp RET
                                                                                         &kp LCTRL                   &kp LALT   &kp SPACE                                               &kp SPACE  &kp RALT  &kp ENTER
            >;

            label = "Excali";
            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
        };

        MacExcali {
            bindings = <
&ta TAB C_EJECT  &ta LEFT_BRACKET LEFT_PARENTHESIS  &ta RIGHT_BRACKET RIGHT_PARENTHESIS  &ta LESS_THAN GREATER_THAN  &trans     &kp BACKSPACE                     &kp UP               &kp PLUS   &kp N7    &kp N8     &kp N9  &kp ASTRK  &kp BSPC
&trans           &kp N1                             &kp N2                               &kp N5                      &kp N6     &trans                  &kp LEFT  &kp RET   &kp RIGHT  &kp MINUS  &kp N4    &kp N5     &kp N6  &kp FSLH   &trans
&kp LSHFT        &kp LG(Z)                          &kp LG(X)                            &kp LG(C)                   &kp LG(V)  &kp ENTER      &to 0              &kp DOWN             &kp N0     &kp N1    &kp N2     &kp N3  &kp DOT    &kp RET
                                                                                         &kp LCTRL                   &kp LALT   &kp SPACE                                              &kp SPACE  &kp RALT  &kp ENTER
            >;

            label = "MacExcali";
            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
